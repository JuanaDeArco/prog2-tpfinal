name: ci

on:
  push:
    branches: [test/ci]
  pull_request:
    branches: [test/ci]
#  release:
#    types: [published]
# Este Workflow se ejecutaria cada vez que querramos hacer un "release". Actualmente de la forma que esta configurado el repo
# no va a andar, pero si armamos un release (https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository)
# podemos pushear esto a dockerhub. 
# Queda aca para demostrar que se puede hacer, pero no es el workflow normal
jobs:
  CI:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: imolena/merendar
      -
        name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.13'
      - 
        name: Buildear la imagen de Docker de la API
        id: push-api
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ./Dockerfile
          build-args: PORT=8080
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      -
          name: Buildear la imagen de Docker de la Db
          id: push-db
          uses: docker/build-push-action@v6
          with:
            push: true
            context: .
            file: ./db/Dockerfile
            build-args: PORT=8080
            tags: ${{ steps.meta.outputs.tags }}-db
            labels: ${{ steps.meta.outputs.labels }}-db